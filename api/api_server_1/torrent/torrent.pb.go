// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.19.4
// source: torrent.proto

package torrent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	Code_CodeUnDefine       Code = 0
	Code_CodeVerifyPassWord Code = 1 //验证密码
	Code_CodeMessageTData   Code = 2 //TData信息
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "CodeUnDefine",
		1: "CodeVerifyPassWord",
		2: "CodeMessageTData",
	}
	Code_value = map[string]int32{
		"CodeUnDefine":       0,
		"CodeVerifyPassWord": 1,
		"CodeMessageTData":   2,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_torrent_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_torrent_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_torrent_proto_rawDescGZIP(), []int{0}
}

type TDataCode int32

const (
	TDataCode_TDataCodeUnDefine              TDataCode = 0
	TDataCode_TDataCodeVerifyHashExist       TDataCode = 1 //检查数据库是否已经含有hash信息
	TDataCode_TDataCodeNeedDownload          TDataCode = 2 //需要根据hash信息下载种子信息
	TDataCode_TDataCodeNeedHandleTorrentData TDataCode = 3 //需要处理入库种子信息
)

// Enum value maps for TDataCode.
var (
	TDataCode_name = map[int32]string{
		0: "TDataCodeUnDefine",
		1: "TDataCodeVerifyHashExist",
		2: "TDataCodeNeedDownload",
		3: "TDataCodeNeedHandleTorrentData",
	}
	TDataCode_value = map[string]int32{
		"TDataCodeUnDefine":              0,
		"TDataCodeVerifyHashExist":       1,
		"TDataCodeNeedDownload":          2,
		"TDataCodeNeedHandleTorrentData": 3,
	}
)

func (x TDataCode) Enum() *TDataCode {
	p := new(TDataCode)
	*p = x
	return p
}

func (x TDataCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TDataCode) Descriptor() protoreflect.EnumDescriptor {
	return file_torrent_proto_enumTypes[1].Descriptor()
}

func (TDataCode) Type() protoreflect.EnumType {
	return &file_torrent_proto_enumTypes[1]
}

func (x TDataCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TDataCode.Descriptor instead.
func (TDataCode) EnumDescriptor() ([]byte, []int) {
	return file_torrent_proto_rawDescGZIP(), []int{1}
}

type TData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TDataCode    TDataCode `protobuf:"varint,1,opt,name=TDataCode,proto3,enum=torrent.TDataCode" json:"TDataCode,omitempty"`
	Hash         string    `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Addr         string    `protobuf:"bytes,3,opt,name=Addr,proto3" json:"Addr,omitempty"`
	NeedDownload bool      `protobuf:"varint,4,opt,name=NeedDownload,proto3" json:"NeedDownload,omitempty"`
	TorrentData  []byte    `protobuf:"bytes,5,opt,name=TorrentData,proto3" json:"TorrentData,omitempty"`
}

func (x *TData) Reset() {
	*x = TData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_torrent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TData) ProtoMessage() {}

func (x *TData) ProtoReflect() protoreflect.Message {
	mi := &file_torrent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TData.ProtoReflect.Descriptor instead.
func (*TData) Descriptor() ([]byte, []int) {
	return file_torrent_proto_rawDescGZIP(), []int{0}
}

func (x *TData) GetTDataCode() TDataCode {
	if x != nil {
		return x.TDataCode
	}
	return TDataCode_TDataCodeUnDefine
}

func (x *TData) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TData) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *TData) GetNeedDownload() bool {
	if x != nil {
		return x.NeedDownload
	}
	return false
}

func (x *TData) GetTorrentData() []byte {
	if x != nil {
		return x.TorrentData
	}
	return nil
}

type Verify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Verify) Reset() {
	*x = Verify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_torrent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verify) ProtoMessage() {}

func (x *Verify) ProtoReflect() protoreflect.Message {
	mi := &file_torrent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verify.ProtoReflect.Descriptor instead.
func (*Verify) Descriptor() ([]byte, []int) {
	return file_torrent_proto_rawDescGZIP(), []int{1}
}

func (x *Verify) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   Code    `protobuf:"varint,1,opt,name=code,proto3,enum=torrent.Code" json:"code,omitempty"`
	TData  *TData  `protobuf:"bytes,2,opt,name=TData,proto3" json:"TData,omitempty"`
	Verify *Verify `protobuf:"bytes,3,opt,name=Verify,proto3" json:"Verify,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_torrent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_torrent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_torrent_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_CodeUnDefine
}

func (x *Message) GetTData() *TData {
	if x != nil {
		return x.TData
	}
	return nil
}

func (x *Message) GetVerify() *Verify {
	if x != nil {
		return x.Verify
	}
	return nil
}

var File_torrent_proto protoreflect.FileDescriptor

var file_torrent_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x05, 0x54, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x30, 0x0a, 0x09, 0x54, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x54, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x4e, 0x65, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x4e, 0x65, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x24, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x7b, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x54, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x54, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x06,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x06, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x2a, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73,
	0x73, 0x57, 0x6f, 0x72, 0x64, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x6f, 0x64, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x44, 0x61, 0x74, 0x61, 0x10, 0x02, 0x2a, 0x7f, 0x0a,
	0x09, 0x54, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x55, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x48, 0x61, 0x73, 0x68, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x54, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x65, 0x64,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x44,
	0x61, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x65, 0x65, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x10, 0x03, 0x32, 0x40,
	0x0a, 0x03, 0x52, 0x50, 0x43, 0x12, 0x39, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x10, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x1e, 0x5a, 0x1c, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x31,
	0x2f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x3b, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_torrent_proto_rawDescOnce sync.Once
	file_torrent_proto_rawDescData = file_torrent_proto_rawDesc
)

func file_torrent_proto_rawDescGZIP() []byte {
	file_torrent_proto_rawDescOnce.Do(func() {
		file_torrent_proto_rawDescData = protoimpl.X.CompressGZIP(file_torrent_proto_rawDescData)
	})
	return file_torrent_proto_rawDescData
}

var file_torrent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_torrent_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_torrent_proto_goTypes = []interface{}{
	(Code)(0),       // 0: torrent.Code
	(TDataCode)(0),  // 1: torrent.TDataCode
	(*TData)(nil),   // 2: torrent.TData
	(*Verify)(nil),  // 3: torrent.Verify
	(*Message)(nil), // 4: torrent.Message
}
var file_torrent_proto_depIdxs = []int32{
	1, // 0: torrent.TData.TDataCode:type_name -> torrent.TDataCode
	0, // 1: torrent.Message.code:type_name -> torrent.Code
	2, // 2: torrent.Message.TData:type_name -> torrent.TData
	3, // 3: torrent.Message.Verify:type_name -> torrent.Verify
	4, // 4: torrent.RPC.MessageStream:input_type -> torrent.Message
	4, // 5: torrent.RPC.MessageStream:output_type -> torrent.Message
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_torrent_proto_init() }
func file_torrent_proto_init() {
	if File_torrent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_torrent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_torrent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_torrent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_torrent_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_torrent_proto_goTypes,
		DependencyIndexes: file_torrent_proto_depIdxs,
		EnumInfos:         file_torrent_proto_enumTypes,
		MessageInfos:      file_torrent_proto_msgTypes,
	}.Build()
	File_torrent_proto = out.File
	file_torrent_proto_rawDesc = nil
	file_torrent_proto_goTypes = nil
	file_torrent_proto_depIdxs = nil
}
